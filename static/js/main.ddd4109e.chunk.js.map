{"version":3,"sources":["Close.js","Modal1.js","Arrow.js","Modal2.js","CreditCard.js","Modal3.js","Done.js","Modal4.js","App.js","serviceWorker.js","index.js"],"names":["Close","react_default","a","createElement","width","height","viewBox","fill","xmlns","x","y","rx","transform","stroke","Modal1","props","style","className","onClick","closeChainedModal","src_Close","title","description","right","d","Modal2","currentModal","totalModals","showNext","Arrow","Demo","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputFocus","_ref","target","setState","focused","name","handleInputChange","_ref2","defineProperty","value","replace","state","number","expiry","cvc","Payment","formatCardNumber","document","querySelector","formatCardExpiry","formatCardCVC","type","isValid","console","log","_this$state","es","callback","handleCallback","placeholder","onKeyUp","onFocus","React","Component","CreditCard_Demo","showPrev","cx","cy","r","color","marginBottom","Done","App","toggleModals","showModals","toggleModal","showModal","_this2","marginLeft","href","build_default","animationNext","animationPrev","visible","onRequestClose","closeOnBackground","animationSpeed","elements","component","Modal3","Modal4","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ddd4109e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Close = () => {\r\n    return (\r\n        <svg width=\"46\" height=\"46\" viewBox=\"0 0 46 46\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <rect x=\"12.7279\" y=\"10.6066\" width=\"31\" height=\"4\" rx=\"2\" transform=\"rotate(45 12.7279 10.6066)\" fill=\"white\" stroke=\"#1E80F4\" />\r\n            <rect x=\"10.6066\" y=\"32.5269\" width=\"31\" height=\"4\" rx=\"2\" transform=\"rotate(-45 10.6066 32.5269)\" fill=\"white\" stroke=\"#1E80F4\" />\r\n            <rect x=\"21.9203\" y=\"20.5061\" width=\"5\" height=\"3\" transform=\"rotate(45 21.9203 20.5061)\" fill=\"white\" />\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default Close;","import React from \"react\";\r\nimport Close from './Close';\r\n\r\nconst Modal1 = props => {\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <div className=\"close-btn\" onClick={() => props.closeChainedModal()}>\r\n        <Close />\r\n      </div>\r\n      <h3 className=\"popup-header\">{props.title}</h3>\r\n      <div className=\"popup-description\">{props.description}</div>\r\n      \r\n      <a className=\"raised-button btn-blue\" onClick={() => props.closeChainedModal()}>Ok, got it</a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal1;\r\n","import React from 'react';\r\n\r\nconst Close = props => {\r\n    return (\r\n\r\n        <svg style={props.right ? {transform: \"rotate(180deg)\"} : {}} width=\"33\" height=\"32\" viewBox=\"0 0 33 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <rect x=\"1.5\" y=\"13.5\" width=\"31\" height=\"4\" rx=\"2\" fill=\"white\" stroke=\"currentColor\" />\r\n            <rect x=\"0.707107\" y=\"15.5564\" width=\"21\" height=\"4\" rx=\"2\" transform=\"rotate(-45 0.707107 15.5564)\" fill=\"white\" stroke=\"currentColor\" />\r\n            <rect x=\"3.53554\" y=\"12.7071\" width=\"21\" height=\"4\" rx=\"2\" transform=\"rotate(45 3.53554 12.7071)\" fill=\"white\" stroke=\"currentColor\" />\r\n            <rect x=\"1.39676\" y=\"15.4787\" width=\"9.17984\" height=\"3.00434\" rx=\"1.50217\" transform=\"rotate(-44.8907 1.39676 15.4787)\" fill=\"white\" />\r\n            <path d=\"M5 15.5022C5 14.6725 5.67254 14 6.50217 14H11.8262C12.6558 14 13.3283 14.6725 13.3283 15.5022C13.3283 16.3318 12.6558 17.0043 11.8262 17.0043H6.50217C5.67255 17.0043 5 16.3318 5 15.5022Z\" fill=\"white\" />\r\n        </svg>\r\n\r\n    );\r\n};\r\n\r\nexport default Close;","import React from \"react\";\r\nimport Arrow from './Arrow';\r\n\r\nconst Modal2 = props => {\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      \r\n      <h3>{props.title}</h3>\r\n      \r\n      <div className=\"steps\">Step <b>{props.currentModal+1}</b> from <b>{props.totalModals}</b></div>\r\n\r\n      <div className=\"plans-holder\">\r\n        <div className=\"plan-description\">\r\n          <h4>Basic</h4>\r\n          <p className=\"description-text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua</p>\r\n          <a className=\"raised-button button-plan btn-green\" onClick={props.showNext()}>Get basic plan</a>\r\n        </div>\r\n\r\n        <div className=\"plan-description\">\r\n          <h4>Advanced</h4>\r\n          <p className=\"description-text\">Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\r\n          <a className=\"raised-button button-plan btn-green\" onClick={props.showNext()}>Get advanced plan</a>\r\n        </div>\r\n\r\n        <div className=\"plan-description\">\r\n          <h4>Pro</h4>\r\n          <p className=\"description-text\">Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur</p>\r\n          <a className=\"raised-button button-plan btn-red\" onClick={props.showNext()}>Go pro</a>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"next-btn-holder\">\r\n        <div className=\"next-btn\" onClick={props.showNext()}>\r\n          <span className=\"next-btn-text\"> Payment  </span>\r\n          <Arrow right/>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal2;","import React from 'react';\r\nimport Payment from 'payment';\r\n\r\nimport ReactCreditCard from 'react-credit-cards';\r\nimport 'react-credit-cards/es/styles-compiled.css';\r\n\r\nexport default class Demo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      number: '',\r\n      name: '',\r\n      expiry: '',\r\n      cvc: '',\r\n      focused: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    Payment.formatCardNumber(document.querySelector('[name=\"number\"]'));\r\n    Payment.formatCardExpiry(document.querySelector('[name=\"expiry\"]'));\r\n    Payment.formatCardCVC(document.querySelector('[name=\"cvc\"]'));\r\n  }\r\n\r\n  handleInputFocus = ({ target }) => {\r\n    this.setState({\r\n      focused: target.name,\r\n    });\r\n  };\r\n\r\n  handleInputChange = ({ target }) => {\r\n    if (target.name === 'number') {\r\n      this.setState({\r\n        [target.name]: target.value.replace(/ /g, ''),\r\n      });\r\n    }\r\n    else if (target.name === 'expiry') {\r\n      this.setState({\r\n        [target.name]: target.value.replace(/ |\\//g, ''),\r\n      });\r\n    }\r\n    else {\r\n      this.setState({\r\n        [target.name]: target.value,\r\n      });\r\n    }\r\n  };\r\n  handleCallback(type, isValid) {\r\n    console.log(type, isValid); //eslint-disable-line no-console\r\n  }\r\n  render() {\r\n    const { name, number, expiry, cvc, focused } = this.state;\r\n    return (\r\n      <div className=\"rccs__demo\">\r\n        <div className=\"rccs__demo__content\">\r\n          <ReactCreditCard\r\n            number={number}\r\n            name={name}\r\n            expiry={expiry}\r\n            cvc={cvc}\r\n            focused={focused}\r\n            callback={this.handleCallback}\r\n          />\r\n          <form>\r\n            <div>\r\n              <input\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                placeholder=\"Card Number\"\r\n                onKeyUp={this.handleInputChange}\r\n                onFocus={this.handleInputFocus}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Name\"\r\n                onKeyUp={this.handleInputChange}\r\n                onFocus={this.handleInputFocus}\r\n              />\r\n            </div>\r\n            <div>\r\n              <input\r\n                type=\"tel\"\r\n                name=\"expiry\"\r\n                placeholder=\"Valid Thru\"\r\n                onKeyUp={this.handleInputChange}\r\n                onFocus={this.handleInputFocus}\r\n              />\r\n              <input\r\n                type=\"tel\"\r\n                name=\"cvc\"\r\n                placeholder=\"CVC\"\r\n                onKeyUp={this.handleInputChange}\r\n                onFocus={this.handleInputFocus}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport Arrow from './Arrow';\r\nimport CreditCard from './CreditCard';\r\n\r\nconst Modal2 = props => {\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n\r\n      <h3>{props.title}</h3>\r\n\r\n      <div className=\"steps\">Step <b>{props.currentModal + 1}</b> from <b>{props.totalModals}</b></div>\r\n      \r\n      <CreditCard/>\r\n      <div className=\"next-btn-holder\">\r\n        <div className=\"prev-btn\" onClick={props.showPrev()}>\r\n          <Arrow />\r\n          <span className=\"next-btn-text\">Choose plan</span>\r\n        </div>\r\n        <a className=\"raised-button button-plan btn-green\" onClick={props.showNext()}>Submit</a>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal2;","import React from 'react';\r\n\r\nconst Close = () => {\r\n    return (\r\n\r\n        <svg width=\"119\" height=\"119\" viewBox=\"0 0 119 119\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <circle cx=\"59.5\" cy=\"59.5\" r=\"59\" fill=\"white\" stroke=\"currentColor\" />\r\n            <circle cx=\"59.5\" cy=\"59.5\" r=\"55\" fill=\"white\" stroke=\"currentColor\" />\r\n            <rect x=\"27.3577\" y=\"55.7067\" width=\"49.1919\" height=\"5\" rx=\"2.5\" transform=\"rotate(46.9024 27.3577 55.7067)\" fill=\"white\" stroke=\"currentColor\" />\r\n            <rect x=\"93.6119\" y=\"31.0274\" width=\"73.4201\" height=\"5\" rx=\"2.5\" transform=\"rotate(118.048 93.6119 31.0274)\" fill=\"white\" stroke=\"currentColor\" />\r\n            <path d=\"M53.9594 84.8975L59.5885 90.683L57 94L51.108 87.6719L53.9594 84.8975Z\" fill=\"white\" />\r\n        </svg>\r\n\r\n    );\r\n};\r\n\r\nexport default Close;","import React from \"react\";\r\nimport Done from './Done';\r\n\r\nconst Modal2 = props => {\r\n    return (\r\n        <div style={{ width: \"100%\" }}>\r\n\r\n            <h3>{props.title}</h3>\r\n            <div className=\"steps\">Step <b>{props.currentModal + 1}</b> from <b>{props.totalModals}</b></div>\r\n            <div className=\"next-btn-holder\" style={{color: '#2ecc71', marginBottom: '40px'}}>\r\n                <Done/>\r\n            </div>\r\n            <a className=\"raised-button btn-blue\" onClick={() => props.closeChainedModal()}>Close</a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Modal2;","import React, { Component } from 'react';\nimport Modal1 from './Modal1';\nimport Modal2 from './Modal2';\nimport Modal3 from './Modal3';\nimport Modal4 from './Modal4';\nimport './App.css';\nimport ChainedModal from \"react-chained-modals\";\nimport \"react-chained-modals/src/modal.css\"\nimport \"animate.css\"\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showModals: false,\n      showModal: false\n    };\n  }\n\n  toggleModals = () => {\n    this.setState({\n      showModals: !this.state.showModals\n    });\n  };\n  toggleModal = () => {\n    this.setState({\n      showModal: !this.state.showModal\n    });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 style={{ marginBottom: 50 }}>Demo page react-chained-modals</h1>\n        <div>\n          <span className=\"raised-button button-plan btn-blue app-btn\" onClick={() => this.toggleModals()}>Few modals</span>\n          <span style={{ marginLeft: 15 }} className=\"raised-button button-plan btn-green app-btn\" onClick={() => this.toggleModal()}>Single modal</span>\n        </div>\n        <a className=\"github-link\" href=\"https://github.com/AModin/react-chained-modals\">Check on github</a>\n        <ChainedModal\n          animationNext=\"fadeInRight\"\n          animationPrev=\"fadeInLeft\"\n          visible={this.state.showModals}\n          onRequestClose={this.toggleModals}\n          closeOnBackground\n          animationSpeed=\"faster\"\n          elements={[\n            {\n              component: Modal2,\n              props: { title: \"Choose your plan\" }\n            },\n            {\n              component: Modal3,\n              props: { title: \"Payment\" }\n            },\n            {\n              component: Modal4,\n              props: { title: \"Success\" }\n            }\n          ]}\n        />\n        <ChainedModal\n          animationNext=\"zoomIn\"\n          visible={this.state.showModal}\n          onRequestClose={this.toggleModal}\n          closeOnBackground\n          elements={[\n            {\n              component: Modal1,\n              props: { title: \"Single popup example \", description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\" }\n            },\n          ]}\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}